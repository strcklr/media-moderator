{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","haveFile","uploadText","file","removeFile","setState","this","className","onClick","id","FileDrop","onFrameDragEnter","event","console","log","onFrameDragLeave","onFrameDrop","onDragOver","onDragLeave","onDrop","files","filename","name","getUploadIcon","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAgEeA,E,4MAzDbC,MAAQ,CACNC,UAAU,EACVC,WAAY,uDACZC,KAAM,2C,EAGRC,WAAa,WACX,EAAKC,SAAS,CACZJ,UAAU,EACVC,WAAY,uDACZC,KAAM,iB,mDAIV,WACE,OAAKG,KAAKN,MAAMC,SAGP,yBAAQM,UAAU,eAAeC,QAASF,KAAKF,WAA/C,UAA2D,sBAAMG,UAAU,WAAhB,SAA4BD,KAAKN,MAAMG,OAAlG,IAA+G,cAAC,IAAD,CAAUM,GAAG,kBAF5H,cAAC,IAAD,CAAUF,UAAU,a,oBAM/B,WAAU,IAAD,OACP,OACE,qBAAKA,UAAU,MAAf,SACE,yBAAQA,UAAU,SAAlB,UACE,oBAAIE,GAAG,QAAP,6BACA,oBAAIA,GAAG,WAAP,0CACA,qBAAKF,UAAU,WAAf,SACE,eAACG,EAAA,SAAD,CACEC,iBAAkB,SAACC,GAAD,OAAWC,QAAQC,IAAI,mBAAoBF,IAC7DG,iBAAkB,SAACH,GAAD,OAAWC,QAAQC,IAAI,mBAAoBF,IAC7DI,YAAa,SAACJ,GAAD,OAAWC,QAAQC,IAAI,cAAeF,IACnDK,WAAY,SAACL,GAAD,OAAWC,QAAQC,IAAI,aAAcF,IACjDM,YAAa,SAACN,GAAD,OAAWC,QAAQC,IAAI,cAAeF,IACnDO,OAAQ,SAACC,EAAOR,GACdC,QAAQC,IAAI,UAAWM,EAAOR,GAC9BC,QAAQC,IAAIM,GACZ,IAAMC,EAAWD,EAAM,GAAGE,KAC1B,EAAKjB,SAAS,CACZF,KAAMkB,EACNpB,UAAU,EACVC,WAAY,0BAA4BmB,KAb9C,UAiBGf,KAAKiB,gBACN,mBAAGd,GAAG,sBAAN,SAA6BH,KAAKN,MAAME,2B,GAhDpCsB,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9d969123.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { HiUpload } from 'react-icons/hi';\nimport { TiDelete } from 'react-icons/ti';\nimport './App.css';\nimport { FileDrop } from 'react-file-drop';\n\nclass App extends Component {\n  state = {\n    haveFile: false,\n    uploadText: \"Drag and drop a file to be scanned. Click to browse.\",\n    file: \"unkkj;lkjasdl;kfja;lsdkfja;lsdkjown.mp4\",\n  }\n\n  removeFile = () => {\n    this.setState({\n      haveFile: false,\n      uploadText: \"Drag and drop a file to be scanned. Click to browse.\",\n      file: \"unknown.mp4\"\n    });\n  }\n\n  getUploadIcon() {\n    if (!this.state.haveFile) {\n      return <HiUpload className='upload'/>\n    } else {\n      return <button className=\"removeButton\" onClick={this.removeFile}><span className=\"filename\">{this.state.file}</span> <TiDelete id=\"deleteIcon\"/></button>\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"banner\">\n          <h1 id='title'>Media Moderator</h1>\n          <h4 id='subtitle'>View content with confidence</h4>\n          <div className=\"fileDrop\">\n            <FileDrop\n              onFrameDragEnter={(event) => console.log('onFrameDragEnter', event)}\n              onFrameDragLeave={(event) => console.log('onFrameDragLeave', event)}\n              onFrameDrop={(event) => console.log('onFrameDrop', event)}\n              onDragOver={(event) => console.log('onDragOver', event)}\n              onDragLeave={(event) => console.log('onDragLeave', event)}\n              onDrop={(files, event) => {\n                console.log('onDrop!', files, event);\n                console.log(files);\n                const filename = files[0].name;\n                this.setState({\n                  file: filename,\n                  haveFile: true,\n                  uploadText: \"Ready to process file: \" + filename\n                })\n\n              }}>\n              {this.getUploadIcon()}\n              <p id=\"fileDropInstruction\">{this.state.uploadText}</p>\n            </FileDrop>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}