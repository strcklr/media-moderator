{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","fileInputRef","useRef","useState","haveFile","setHaveFile","uploadText","setUploadText","setFile","filename","setFileName","handleFileUpload","files","name","removeFile","className","id","FileDrop","onTargetClick","current","click","onFrameDragEnter","event","console","log","onFrameDragLeave","onFrameDrop","onDragOver","onDragLeave","onDrop","onClick","onChange","target","ref","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOA+EeA,MAzEf,WACE,IAAMC,EAAeC,iBAAO,MAM5B,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAqCF,mBAAS,wDAA9C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwBJ,mBAAS,MAAjC,mBAAaK,GAAb,WACA,EAAgCL,mBAAS,eAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KAEIC,EAAmB,SAACC,GACtBJ,EAAQI,EAAM,IACdF,EAAYE,EAAM,GAAGC,MACrBN,EAAc,0BAA4BK,EAAM,GAAGC,MACnDR,GAAY,IAGVS,EAAa,WACfT,GAAY,GACZG,EAAQ,MACRE,EAAY,eACZH,EAAc,yDAgBhB,OACE,qBAAKQ,UAAU,MAAf,SACE,yBAAQA,UAAU,SAAlB,UACE,oBAAIC,GAAG,QAAP,6BACA,oBAAIA,GAAG,WAAP,0CACA,qBAAKD,UAAU,WAAf,SACE,eAACE,EAAA,SAAD,CACEC,cA5CY,WACfd,GACHH,EAAakB,QAAQC,SA2CfC,iBAAkB,SAACC,GAAD,OAAWC,QAAQC,IAAI,mBAAoBF,IAC7DG,iBAAkB,SAACH,GAAD,OAAWC,QAAQC,IAAI,mBAAoBF,IAC7DI,YAAa,SAACJ,GAAD,OAAWC,QAAQC,IAAI,cAAeF,IACnDK,WAAY,SAACL,GAAD,OAAWC,QAAQC,IAAI,aAAcF,IACjDM,YAAa,SAACN,GAAD,OAAWC,QAAQC,IAAI,cAAeF,IACnDO,OAAQ,SAACjB,EAAOU,GACdC,QAAQC,IAAI,UAAWZ,EAAOU,GAC9BC,QAAQC,IAAIZ,GACZD,EAAiBC,IAVrB,UAbDR,EAGI,yBAAQW,UAAU,eAAee,QAAShB,EAA1C,UAAsD,sBAAMC,UAAU,WAAhB,SAA4BN,IAAlF,IAAmG,cAAC,IAAD,CAAUO,GAAG,kBAFhH,cAAC,IAAD,CAAUD,UAAU,WAyBrB,mBAAGC,GAAG,sBAAN,SAA6BV,IAC7B,uBACEyB,SAlCY,SAACT,GACvB,IAAQV,EAAUU,EAAMU,OAAhBpB,MACRD,EAAiBC,IAiCPqB,IAAKhC,EACLiC,KAAK,OACLnB,UAAU,sBCzDToB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d5cc786b.chunk.js","sourcesContent":["import React, { Component, useRef, useState } from 'react';\nimport { HiUpload } from 'react-icons/hi';\nimport { TiDelete } from 'react-icons/ti';\nimport './App.css';\nimport { FileDrop } from 'react-file-drop';\n\nfunction App () {\n  const fileInputRef = useRef(null);\n  const onTargetClick = () => {\n    if (!haveFile) {\n      fileInputRef.current.click();\n    }\n  }\n  const [haveFile, setHaveFile] = useState(false);\n  const [uploadText, setUploadText] =  useState(\"Drag and drop a file to be scanned. Click to browse.\");\n  const [file, setFile] = useState(null);\n  const [filename, setFileName] = useState(\"unknown.mp4\");\n\n  var handleFileUpload = (files) => {\n    setFile(files[0]);\n    setFileName(files[0].name);\n    setUploadText(\"Ready to process file: \" + files[0].name);\n    setHaveFile(true);\n  }\n\n  var removeFile = () => {\n    setHaveFile(false);\n    setFile(null);\n    setFileName(\"unknown.mp4\");\n    setUploadText(\"Drag and drop a file to be scanned. Click to browse.\");\n  }\n\n  var onFileInputChange = (event) => {\n    const { files } = event.target;\n    handleFileUpload(files);\n  }\n\n  function getUploadIcon() {\n    if (!haveFile) {\n      return <HiUpload className='upload'/>\n    } else {\n      return <button className=\"removeButton\" onClick={removeFile}><span className=\"filename\">{filename}</span> <TiDelete id=\"deleteIcon\"/></button>\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"banner\">\n        <h1 id='title'>Media Moderator</h1>\n        <h4 id='subtitle'>View content with confidence</h4>\n        <div className=\"fileDrop\">\n          <FileDrop\n            onTargetClick={onTargetClick}\n            onFrameDragEnter={(event) => console.log('onFrameDragEnter', event)}\n            onFrameDragLeave={(event) => console.log('onFrameDragLeave', event)}\n            onFrameDrop={(event) => console.log('onFrameDrop', event)}\n            onDragOver={(event) => console.log('onDragOver', event)}\n            onDragLeave={(event) => console.log('onDragLeave', event)}\n            onDrop={(files, event) => {\n              console.log('onDrop!', files, event);\n              console.log(files);\n              handleFileUpload(files);\n            }}>\n            {getUploadIcon()}\n            <p id=\"fileDropInstruction\">{uploadText}</p>\n            <input\n              onChange={onFileInputChange}\n              ref={fileInputRef}\n              type=\"file\"\n              className=\"hidden\"\n            />\n          </FileDrop>\n        </div>\n      </header>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}